name: FirecREST UI Release Workflow

on:
  release:
    types: [prereleased, released]

env:
  RELEASE_VERSION: ${{ github.ref_name }}
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  CHART_DIR: deploy/helm
  GH_PAGES_BRANCH: gh-pages

jobs:
  docker_release:
    name: Publish Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./deploy/docker/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

  helm_release:
    name: Publish Helm Chart
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: docker_release
    steps:
      - name: Checkout source repo (release tag)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4

      - name: Package Helm chart from release
        run: |
          helm package $CHART_DIR/firecrest-web-ui \
            --version="${{ github.ref_name }}" \
            --app-version="${{ github.ref_name }}"
          mkdir helm-package
          mv *.tgz helm-package/

      - name: Clone gh-pages branch
        run: |
          git clone --branch $GH_PAGES_BRANCH https://github.com/${{ github.repository }} gh-pages
          cd gh-pages

          mkdir -p helm
          mv ../helm-package/*.tgz helm/

          # Add .nojekyll to make sure helm/ is published
          touch .nojekyll

          if [ -f helm/index.yaml ]; then
            helm repo index helm --url https://eth-cscs.github.io/firecrest-ui/helm --merge helm/index.yaml
          else
            helm repo index helm --url https://eth-cscs.github.io/firecrest-ui/helm
          fi

          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

          git add .nojekyll helm
          git commit -m "Publish Helm chart for release ${{ github.ref_name }}" || echo "No changes to commit"
          git push origin $GH_PAGES_BRANCH

  docs_release:
    name: Publish Documentation
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: [docker_release, helm_release]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Configure Git User
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Build MkDocs
        run: |
          pip install --upgrade pip
          pip install -r ./docs/requirements.txt
          rm -rf site .site
          mkdocs build
          mv site .site

      - name: Merge site with gh-pages branch
        run: |
          git fetch origin $GH_PAGES_BRANCH:$GH_PAGES_BRANCH
          git checkout $GH_PAGES_BRANCH
          [ -d charts ] && mv charts .charts || echo "No charts directory to preserve"
          find . -mindepth 1 -maxdepth 1 ! -name '.*' ! -name '.git' ! -name 'helm' -exec rm -rf {} \;
          mv  ./.site/* ./
          rm -rf .site
          [ -d .charts ] && mv .charts charts || echo "No charts directory to restore"
          rm -rf .charts

      - name: Check for changes
        run: |
          git diff --quiet || echo "CHANGES=true" >> $GITHUB_ENV

      - name: Publish MkDocs
        if: ${{ env.CHANGES == 'true' }}
        run: |
          git add .
          git commit -m "New documentation release (${{ github.ref_name }})"
          git push -u origin $GH_PAGES_BRANCH
